name: CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright (browsers + deps)
        working-directory: apps/web
        run: pnpm exec playwright install --with-deps chromium

      - name: Lint
        run: pnpm lint

      - name: Type Check
        run: pnpm type-check

      - name: Unit tests (with coverage)
        run: pnpm test:unit:cov || pnpm test:unit:cov

      - name: E2E tests with mock (retry once)
        id: e2e
        working-directory: apps/web
        env:
          DATA_SOURCE: mock
          BASE_URL: http://127.0.0.1:3000
        run: |
          pnpm test:e2e:mock || pnpm test:e2e:mock

      - name: Upload Playwright artifacts
        if: failure() || steps.e2e.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            apps/web/test-results/**
            apps/web/playwright-report/**
            apps/web/playwright/.playwright-artifacts/**
          if-no-files-found: ignore

      - name: Summarize coverage
        if: always()
        run: |
          echo '## Coverage Summary' >> $GITHUB_STEP_SUMMARY
          if [ -f apps/web/coverage/lcov.info ]; then
            echo '' >> $GITHUB_STEP_SUMMARY
            # Parse lcov.info to extract coverage summary
            total_lines=$(grep -c "^LF:" apps/web/coverage/lcov.info | head -1)
            total_hit=$(grep -c "^LH:" apps/web/coverage/lcov.info | head -1)
            total_functions=$(grep -c "^FNF:" apps/web/coverage/lcov.info | head -1)
            total_functions_hit=$(grep -c "^FNH:" apps/web/coverage/lcov.info | head -1)
            total_branches=$(grep -c "^BRF:" apps/web/coverage/lcov.info | head -1)
            total_branches_hit=$(grep -c "^BRH:" apps/web/coverage/lcov.info | head -1)
            
            # Extract actual values
            lf_sum=$(grep "^LF:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            lh_sum=$(grep "^LH:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            fnf_sum=$(grep "^FNF:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            fnh_sum=$(grep "^FNH:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            brf_sum=$(grep "^BRF:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            brh_sum=$(grep "^BRH:" apps/web/coverage/lcov.info | cut -d: -f2 | awk '{sum += $1} END {print sum}')
            
            # Calculate percentages
            if [ "$lf_sum" -gt 0 ]; then
              line_coverage=$(awk "BEGIN {printf \"%.1f\", ($lh_sum/$lf_sum)*100}")
            else
              line_coverage="0.0"
            fi
            
            if [ "$fnf_sum" -gt 0 ]; then
              function_coverage=$(awk "BEGIN {printf \"%.1f\", ($fnh_sum/$fnf_sum)*100}")
            else
              function_coverage="0.0"
            fi
            
            if [ "$brf_sum" -gt 0 ]; then
              branch_coverage=$(awk "BEGIN {printf \"%.1f\", ($brh_sum/$brf_sum)*100}")
            else
              branch_coverage="0.0"
            fi
            
            echo "| Metric | Coverage | Total | Covered |" >> $GITHUB_STEP_SUMMARY
            echo "|--------|----------|-------|---------|" >> $GITHUB_STEP_SUMMARY
            echo "| Lines | ${line_coverage}% | ${lf_sum} | ${lh_sum} |" >> $GITHUB_STEP_SUMMARY
            echo "| Functions | ${function_coverage}% | ${fnf_sum} | ${fnh_sum} |" >> $GITHUB_STEP_SUMMARY
            echo "| Branches | ${branch_coverage}% | ${brf_sum} | ${brh_sum} |" >> $GITHUB_STEP_SUMMARY
          else
            echo 'No coverage file found' >> $GITHUB_STEP_SUMMARY
          fi
