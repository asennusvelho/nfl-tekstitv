name: CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

concurrency:
  group: ci-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type Check
        run: pnpm type-check

      - name: Unit tests (with coverage)
        run: pnpm test:unit:cov || { echo 'First attempt failed, retrying...' && pnpm test:unit:cov; }

      - name: Component tests (with coverage)
        run: pnpm --filter @nfl-tekstitv/web test:component -- --coverage || pnpm --filter @nfl-tekstitv/web test:component -- --coverage

      - name: Install Playwright Browsers
        working-directory: apps/web
        run: pnpm playwright:install

      - name: E2E tests with mock (retry once)
        id: e2e
        working-directory: apps/web
        env:
          DATA_SOURCE: mock
          BASE_URL: http://127.0.0.1:3000
        run: |
          pnpm test:e2e:mock || pnpm test:e2e:mock

      - name: Upload Playwright artifacts
        if: failure() || steps.e2e.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            apps/web/test-results/**
            apps/web/playwright-report/**
            apps/web/playwright/.playwright-artifacts/**
          if-no-files-found: ignore

      - name: Summarize coverage
        if: always()
        run: |
          echo '## Coverage Summary' >> $GITHUB_STEP_SUMMARY
          if [ -f apps/web/coverage/index.html ]; then
            grep -Eo 'All files[^%]*%|Statements[^%]*%' apps/web/coverage/lcov-report/index.html 2>/dev/null || true
          fi
          if [ -f coverage/lcov.info ]; then
            npx --yes coverage-summary-cli coverage/lcov.info >> $GITHUB_STEP_SUMMARY 2>/dev/null || echo 'lcov parsing skipped'
          fi
